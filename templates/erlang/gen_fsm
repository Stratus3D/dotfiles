%%%-------------------------------------------------------------------
%%% @doc
%%%
%%% @end
%%%-------------------------------------------------------------------
-module($basename).

-behaviour(gen_fsm).

%% API
-export([start_link/0]).

%% gen_fsm callbacks
-export([init/1,
         state_name/2,
         state_name/3,
         handle_event/3,
         handle_sync_event/4,
         handle_info/3,
         terminate/3,
         code_change/4]).

-define(SERVER, ?MODULE).

-record(state, {}).

%%%===================================================================
%%% API
%%%===================================================================

-spec start_link() -> {ok, Pid} | ignore | {error, Error}

start_link() ->
    gen_fsm:start_link({local, ?SERVER}, ?MODULE, [], []).

%%%===================================================================
%%% gen_fsm callbacks
%%%===================================================================

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec init(Args) -> {ok, StateName, State} |
                    {ok, StateName, State, Timeout} |
                    ignore |
                    {stop, StopReason}

init([]) ->
    {ok, state_name, #state{}}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec state_name(Event, State) ->
                  {next_state, NextStateName, NextState} |
                  {next_state, NextStateName, NextState, Timeout} |
                  {stop, Reason, NewState}

state_name(_Event, State) ->
    {next_state, state_name, State}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec state_name(Event, From, State) ->
                  {next_state, NextStateName, NextState} |
                  {next_state, NextStateName, NextState, Timeout} |
                  {reply, Reply, NextStateName, NextState} |
                  {reply, Reply, NextStateName, NextState, Timeout} |
                  {stop, Reason, NewState} |
                  {stop, Reason, Reply, NewState}

state_name(_Event, _From, State) ->
    Reply = ok,
    {reply, Reply, state_name, State}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec handle_event(Event, StateName, State) ->
                  {next_state, NextStateName, NextState} |
                  {next_state, NextStateName, NextState, Timeout} |
                  {stop, Reason, NewState}

handle_event(_Event, StateName, State) ->
    {next_state, StateName, State}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec handle_sync_event(Event, From, StateName, State) ->
                  {next_state, NextStateName, NextState} |
                  {next_state, NextStateName, NextState, Timeout} |
                  {reply, Reply, NextStateName, NextState} |
                  {reply, Reply, NextStateName, NextState, Timeout} |
                  {stop, Reason, NewState} |
                  {stop, Reason, Reply, NewState}

handle_sync_event(_Event, _From, StateName, State) ->
    Reply = ok,
    {reply, Reply, StateName, State}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec handle_info(Info,StateName,State)->
                  {next_state, NextStateName, NextState} |
                  {next_state, NextStateName, NextState, Timeout} |
                  {stop, Reason, NewState}

handle_info(_Info, StateName, State) ->
    {next_state, StateName, State}.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec terminate(Reason, StateName, State) -> void()

terminate(_Reason, _StateName, _State) ->
    ok.

%%--------------------------------------------------------------------
%% @private
%%--------------------------------------------------------------------

-spec code_change(OldVsn, StateName, State, Extra) ->
                  {ok, StateName, NewState}

code_change(_OldVsn, StateName, State, _Extra) ->
    {ok, StateName, State}.

%%%===================================================================
%%% Internal functions
%%%===================================================================
