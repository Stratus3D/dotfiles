# Many of these snippets were taken from my own Bash scripts, or from places
# like:
# * https://betterdev.blog/minimal-safe-bash-script-template/
# * https://dougrichardson.us/2018/08/03/fail-fast-bash-scripting.html
# * https://github.com/ralish/bash-script-template

snippet shebang "The Bash shebang line I typically use"
#!/usr/bin/env bash
endsnippet

snippet strict "My own Bash strict mode variation"
# Unoffical Bash "strict mode"
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
#ORIGINAL_IFS=$IFS
IFS=$'\t\n' # Stricter IFS settings
endsnippet

snippet tempdir "My own temp directory creating code"
TEMP_DIR=$(mktemp -dt "$(basename \$0).XXXXXX")
echo "Created temp directory $TEMP_DIR"
cd $TEMP_DIR
endsnippet

snippet debugflag "Code to turn on tracing when the DEBUG env var is set"
# Enable xtrace if the DEBUG environment variable is set
if [[ ${DEBUG-} =~ ^1|yes|true$ ]]; then
  # Trace the execution of the script (debug)
  set -o xtrace
fi
endsnippet

snippet errorexit "My own error exit function"
error_exit() {
  printf "%s\\n" "\$1"
  exit "${2:-1}" # default exit status 1
}
endsnippet

snippet usage "Usage function template"
usage() {
  cat <<EOF
Usage: $(basename "\$0") [-h] [-v] arg1 [arg2...]

Script description here.

Available options:

-h, --help      Print this help and exit
-v, --verbose   Print script debug info
EOF
  exit
}
endsnippet
