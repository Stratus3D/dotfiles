snippet dbgcalls "Add dbg tracing code for tracing calls in the current process"
dbg:tracer(),
dbg:p(${1:self()}, [c]),
dbg:tpl(${2:'_'}, ${3:'_'}, [{'_', [], [{return_trace}]}])${4:,}
endsnippet

snippet dbgall "Add dbg tracing code for all types of events for the current process"
dbg:tracer()
dbg:p(${1:self()}, [all])
dbg:tpl(${2:'_'}, ${3:'_'}, [{'_', [], [{:return_trace}]}])${4:,}
endsnippet

snippet dbgstop "Stop and clear dbg tracing"
dbg:stop_clear()${1:,}
endsnippet

# Maybe make this support maps as well as proplists?
snippet k "Key and value"
{$1, $1},
endsnippet

snippet lin "Labeled inspect"
io:format("$1 - File: ~p:~p: ~p~n", [?FILE, ?LINE, $1]),
endsnippet

snippet logi "Log inspect"
logger:info("$1 - File: ~p:~p: ~p~n", [?FILE, ?LINE, $1]),
endsnippet
